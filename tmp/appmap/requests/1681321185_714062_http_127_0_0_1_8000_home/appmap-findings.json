{
  "configuration": {
    "checks": [
      {
        "rule": "authz-before-authn"
      },
      {
        "rule": "deprecated-crypto-algorithm"
      },
      {
        "rule": "deserialization-of-untrusted-data"
      },
      {
        "rule": "exec-of-untrusted-command"
      },
      {
        "rule": "http-500"
      },
      {
        "rule": "logout-without-session-reset"
      },
      {
        "rule": "missing-content-type"
      },
      {
        "rule": "n-plus-one-query"
      },
      {
        "rule": "secret-in-log"
      },
      {
        "rule": "too-many-joins"
      },
      {
        "rule": "too-many-updates"
      },
      {
        "rule": "unauthenticated-encryption"
      },
      {
        "rule": "update-in-get-request"
      }
    ],
    "timestampMs": 1681318714130.6113
  },
  "appMapMetadata": {
    "d:\\Ulises\\#Proyectos\\Proyectos con Django\\Proytecto_Agenda\\myenv\\Agenda\\tmp\\appmap\\requests\\1681321185_714062_http_127_0_0_1_8000_home.appmap.json": {
      "name": "GET /home (200) - 14:39:45.714",
      "timestamp": 1681321185.714062,
      "fingerprints": [
        {
          "appmap_digest": "8dc5ab470339fec77b931b74039f8f56ca9f96ddcf24229f5d4e95426587d552",
          "canonicalization_algorithm": "classDependencies",
          "digest": "03fba9a4c906aa3276298b0e88e2d1e5ab092596a8b3e27d0a4f48ad9d3df231",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "8dc5ab470339fec77b931b74039f8f56ca9f96ddcf24229f5d4e95426587d552",
          "canonicalization_algorithm": "classes",
          "digest": "b81da35d2378a2e61c0ef1443379201022988c1bef72af656422b8e35989de63",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "8dc5ab470339fec77b931b74039f8f56ca9f96ddcf24229f5d4e95426587d552",
          "canonicalization_algorithm": "httpClientRequests",
          "digest": "4f53cda18c2baa0c0354bb5f9a3ecbe5ed12ab4d8e11ba873c2f11161202b945",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "8dc5ab470339fec77b931b74039f8f56ca9f96ddcf24229f5d4e95426587d552",
          "canonicalization_algorithm": "httpServerRequests",
          "digest": "9e4d0c3b5bd3d229ed3fb9f598237f79fefee48a5be81361698c56356457d645",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "8dc5ab470339fec77b931b74039f8f56ca9f96ddcf24229f5d4e95426587d552",
          "canonicalization_algorithm": "info",
          "digest": "58890bec563f16fc957617e5aedfc5e14d52d77edc08f0d4b668d85743970fe2",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "8dc5ab470339fec77b931b74039f8f56ca9f96ddcf24229f5d4e95426587d552",
          "canonicalization_algorithm": "labels",
          "digest": "d8d09d8cf5896011630c173e10d32585a9aeaad57093a4857ac47290069595fd",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "8dc5ab470339fec77b931b74039f8f56ca9f96ddcf24229f5d4e95426587d552",
          "canonicalization_algorithm": "packageDependencies",
          "digest": "92f8f4403dc51caeebb7cdd57d8a1182dc6c2fdf14f4d2a8f635579d3955442e",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "8dc5ab470339fec77b931b74039f8f56ca9f96ddcf24229f5d4e95426587d552",
          "canonicalization_algorithm": "packages",
          "digest": "8f673bcd91f7f9a8d3d1520dd0f97fbca018888febf50883c45d2de12a7fa234",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "8dc5ab470339fec77b931b74039f8f56ca9f96ddcf24229f5d4e95426587d552",
          "canonicalization_algorithm": "sqlNormalized",
          "digest": "c210767fa4e849b9259f41d64abea255f12d50dde381124b1892d844d41e915f",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "8dc5ab470339fec77b931b74039f8f56ca9f96ddcf24229f5d4e95426587d552",
          "canonicalization_algorithm": "sqlTables",
          "digest": "b48309a6b09c2732bc530f0279695b1ea6738ebd0b55f50ac2f865b622f63514",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "8dc5ab470339fec77b931b74039f8f56ca9f96ddcf24229f5d4e95426587d552",
          "canonicalization_algorithm": "trace",
          "digest": "c303e4629b63659a37858770751561a4ee342f265f5713390b94b55620feabc9",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "8dc5ab470339fec77b931b74039f8f56ca9f96ddcf24229f5d4e95426587d552",
          "canonicalization_algorithm": "update",
          "digest": "5b538fbfaf2739ebd56babb9caac78a5e52f5462e16cdfc1584e02c28dadbe59",
          "fingerprint_algorithm": "sha256"
        }
      ]
    }
  },
  "findings": [
    {
      "appMapFile": "d:\\Ulises\\#Proyectos\\Proyectos con Django\\Proytecto_Agenda\\myenv\\Agenda\\tmp\\appmap\\requests\\1681321185_714062_http_127_0_0_1_8000_home.appmap.json",
      "checkId": "authz-before-authn",
      "ruleId": "authz-before-authn",
      "ruleTitle": "Authorization performed before authentication",
      "event": {
        "static": false,
        "receiver": {
          "kind": "req",
          "object_id": 3183987149360,
          "value": "<django.contrib.auth.backends.ModelBackend object at 0x000002E5546C4A30>",
          "name": "self",
          "class": "django.contrib.auth.backends.ModelBackend"
        },
        "parameters": [
          {
            "kind": "req",
            "object_id": 3183987560608,
            "value": "<User: uli>",
            "name": "user",
            "class": "django.contrib.auth.models.User"
          }
        ],
        "id": 7,
        "event": "call",
        "thread_id": 3,
        "defined_class": "django.contrib.auth.backends.ModelBackend",
        "method_id": "user_can_authenticate",
        "path": "C:\\Users\\Usuario\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\django\\contrib\\auth\\backends.py",
        "lineno": 51
      },
      "hash": "44e9188dd0f29644d00df7271b7c54766dc83abab1acd85c36035550fe23527f",
      "hash_v2": "2e9fe2025851662785f5ef1f2ab83c16b3789fea8714e00079324bca6a669eb2",
      "stack": [
        "C:\\Users\\Usuario\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\django\\contrib\\auth\\backends.py:51",
        "D:\\Ulises\\#Proyectos\\Proyectos con Django\\Proytecto_Agenda\\myenv\\Agenda\\Agenda_contactos\\views.py:50"
      ],
      "scope": {
        "http_server_request": {
          "request_method": "GET",
          "protocol": "HTTP/1.1",
          "path_info": "/home",
          "normalized_path_info": "/home",
          "mime_type": "text/plain",
          "headers": {
            "Content-Length": "",
            "Content-Type": "text/plain",
            "Host": "127.0.0.1:8000",
            "Connection": "keep-alive",
            "Cache-Control": "max-age=0",
            "Upgrade-Insecure-Requests": "1",
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36",
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
            "Sec-Fetch-Site": "same-origin",
            "Sec-Fetch-Mode": "navigate",
            "Sec-Fetch-User": "?1",
            "Sec-Fetch-Dest": "document",
            "Sec-Ch-Ua": "\"Chromium\";v=\"112\", \"Google Chrome\";v=\"112\", \"Not:A-Brand\";v=\"99\"",
            "Sec-Ch-Ua-Mobile": "?0",
            "Sec-Ch-Ua-Platform": "\"Windows\"",
            "Referer": "http://127.0.0.1:8000/",
            "Accept-Encoding": "gzip, deflate, br",
            "Accept-Language": "en,es-419;q=0.9,es;q=0.8",
            "Cookie": "sessionid=c0f7g5c95pamxwylaodv8i1obqtoa4vv; messages=W1siX19qc29uX21lc3NhZ2UiLDAsMjUsIkJpZW52ZW5pZG8gdWxpIl1d:1pmeRd:3068HIFK6hFAbCdwVgd04VHNDKbHbLcbarQjmhWr7Pk; csrftoken=FTcTNFFHu4fkzmghtn5eYYsUFMRRWC9Fbvv6KLPxMN5blQwABSXwFQtkpjlDG69i"
          }
        },
        "id": 1,
        "event": "call",
        "thread_id": 3
      },
      "message": "django/contrib/auth/backends/ModelBackend#user_can_authenticate provides authorization, but the request is not authenticated",
      "relatedEvents": [
        {
          "static": false,
          "receiver": {
            "kind": "req",
            "object_id": 3183987149360,
            "value": "<django.contrib.auth.backends.ModelBackend object at 0x000002E5546C4A30>",
            "name": "self",
            "class": "django.contrib.auth.backends.ModelBackend"
          },
          "parameters": [
            {
              "kind": "req",
              "object_id": 3183987560608,
              "value": "<User: uli>",
              "name": "user",
              "class": "django.contrib.auth.models.User"
            }
          ],
          "id": 7,
          "event": "call",
          "thread_id": 3,
          "defined_class": "django.contrib.auth.backends.ModelBackend",
          "method_id": "user_can_authenticate",
          "path": "C:\\Users\\Usuario\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\django\\contrib\\auth\\backends.py",
          "lineno": 51
        },
        {
          "http_server_request": {
            "request_method": "GET",
            "protocol": "HTTP/1.1",
            "path_info": "/home",
            "normalized_path_info": "/home",
            "mime_type": "text/plain",
            "headers": {
              "Content-Length": "",
              "Content-Type": "text/plain",
              "Host": "127.0.0.1:8000",
              "Connection": "keep-alive",
              "Cache-Control": "max-age=0",
              "Upgrade-Insecure-Requests": "1",
              "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36",
              "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
              "Sec-Fetch-Site": "same-origin",
              "Sec-Fetch-Mode": "navigate",
              "Sec-Fetch-User": "?1",
              "Sec-Fetch-Dest": "document",
              "Sec-Ch-Ua": "\"Chromium\";v=\"112\", \"Google Chrome\";v=\"112\", \"Not:A-Brand\";v=\"99\"",
              "Sec-Ch-Ua-Mobile": "?0",
              "Sec-Ch-Ua-Platform": "\"Windows\"",
              "Referer": "http://127.0.0.1:8000/",
              "Accept-Encoding": "gzip, deflate, br",
              "Accept-Language": "en,es-419;q=0.9,es;q=0.8",
              "Cookie": "sessionid=c0f7g5c95pamxwylaodv8i1obqtoa4vv; messages=W1siX19qc29uX21lc3NhZ2UiLDAsMjUsIkJpZW52ZW5pZG8gdWxpIl1d:1pmeRd:3068HIFK6hFAbCdwVgd04VHNDKbHbLcbarQjmhWr7Pk; csrftoken=FTcTNFFHu4fkzmghtn5eYYsUFMRRWC9Fbvv6KLPxMN5blQwABSXwFQtkpjlDG69i"
            }
          },
          "id": 1,
          "event": "call",
          "thread_id": 3
        }
      ],
      "impactDomain": "Security",
      "participatingEvents": {
        "request": {
          "http_server_request": {
            "request_method": "GET",
            "protocol": "HTTP/1.1",
            "path_info": "/home",
            "normalized_path_info": "/home",
            "mime_type": "text/plain",
            "headers": {
              "Content-Length": "",
              "Content-Type": "text/plain",
              "Host": "127.0.0.1:8000",
              "Connection": "keep-alive",
              "Cache-Control": "max-age=0",
              "Upgrade-Insecure-Requests": "1",
              "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36",
              "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
              "Sec-Fetch-Site": "same-origin",
              "Sec-Fetch-Mode": "navigate",
              "Sec-Fetch-User": "?1",
              "Sec-Fetch-Dest": "document",
              "Sec-Ch-Ua": "\"Chromium\";v=\"112\", \"Google Chrome\";v=\"112\", \"Not:A-Brand\";v=\"99\"",
              "Sec-Ch-Ua-Mobile": "?0",
              "Sec-Ch-Ua-Platform": "\"Windows\"",
              "Referer": "http://127.0.0.1:8000/",
              "Accept-Encoding": "gzip, deflate, br",
              "Accept-Language": "en,es-419;q=0.9,es;q=0.8",
              "Cookie": "sessionid=c0f7g5c95pamxwylaodv8i1obqtoa4vv; messages=W1siX19qc29uX21lc3NhZ2UiLDAsMjUsIkJpZW52ZW5pZG8gdWxpIl1d:1pmeRd:3068HIFK6hFAbCdwVgd04VHNDKbHbLcbarQjmhWr7Pk; csrftoken=FTcTNFFHu4fkzmghtn5eYYsUFMRRWC9Fbvv6KLPxMN5blQwABSXwFQtkpjlDG69i"
            }
          },
          "id": 1,
          "event": "call",
          "thread_id": 3
        }
      }
    }
  ],
  "checks": [
    {
      "rule": {
        "id": "authz-before-authn",
        "title": "Authorization performed before authentication",
        "labels": [
          "security.authorization",
          "security.authentication"
        ],
        "scope": "http_server_request",
        "impactDomain": "Security",
        "enumerateScope": false,
        "references": {
          "CWE-863": "https://cwe.mitre.org/data/definitions/863.html"
        },
        "description": "Determines when authorization logic is applied to a user identity that has not been properly verified. Because the the user's identity has not been verified yet, the outcome of the authorization check cannot be trusted. A malicious user might be able to get themselves authorized as a different user than they really are - or they may not be logged in at all.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#authz-before-authn"
      },
      "id": "authz-before-authn",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "deprecated-crypto-algorithm",
        "title": "Deprecated cryptographic algorithm",
        "description": "---\nrule: deprecated-crypto-algorithm\nname: Deprecated crypto algorithm\ntitle: Deprecated cryptographic algorithm\nreferences:\n  A02:2021: https://owasp.org/Top10/A02_2021-Cryptographic_Failures/\nimpactDomain: Security\nlabels:\n  - crypto.encrypt\n  - crypto.decrypt\n  - crypto.digest\nscope: root\n---\n\nEnsure that cryptographic operations do not use deprecated algorithms.\n",
        "url": "https://appland.com/docs/analysis/rules-reference.html#deprecated-crypto-algorithm",
        "labels": [
          "crypto.encrypt",
          "crypto.decrypt",
          "crypto.digest"
        ],
        "scope": "root",
        "enumerateScope": true,
        "impactDomain": "Security",
        "references": {
          "A02:2021": "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
        }
      },
      "id": "deprecated-crypto-algorithm",
      "options": {},
      "scope": "root",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "deserialization-of-untrusted-data",
        "title": "Deserialization of untrusted data",
        "labels": [
          "deserialize.unsafe",
          "deserialize.safe",
          "deserialize.sanitize"
        ],
        "impactDomain": "Security",
        "enumerateScope": false,
        "scope": "http_server_request",
        "references": {
          "CWE-502": "https://cwe.mitre.org/data/definitions/502.html",
          "Ruby Security": "https://docs.ruby-lang.org/en/3.0/doc/security_rdoc.html"
        },
        "description": "Finds occurrances of deserialization in which the mechanism employed is known to be unsafe, and the data comes from an untrusted source and hasn't passed through a sanitization mechanism.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#deserialization-of-untrusted-data"
      },
      "id": "deserialization-of-untrusted-data",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "exec-of-untrusted-command",
        "title": "Execution of untrusted system command",
        "labels": [
          "system.exec",
          "system.exec.safe",
          "system.exec.sanitize"
        ],
        "impactDomain": "Security",
        "enumerateScope": false,
        "references": {
          "CWE-78": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "description": "Find occurrances of system command execution in which the command string is not guaranteed to be safe.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#exec-of-untrusted-command"
      },
      "id": "exec-of-untrusted-command",
      "options": {},
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "http-500",
        "title": "HTTP 500 status code",
        "description": "Identifies when an HTTP server request has returned a 500 status code. HTTP 500 status code generally indicate an unanticipated problem in the backend that is not handled in a predictable way. 500 status codes are also hard for client code to handle, because they don't indicate any particular problem or suggest a solution.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#http-500",
        "labels": [],
        "scope": "http_server_request",
        "enumerateScope": false,
        "impactDomain": "Stability",
        "references": {
          "CWE-392": "https://cwe.mitre.org/data/definitions/392.html"
        }
      },
      "id": "http-500",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Stability"
    },
    {
      "rule": {
        "id": "logout-without-session-reset",
        "title": "Logout without session reset",
        "scope": "http_server_request",
        "labels": [
          "http.session.clear",
          "security.logout"
        ],
        "impactDomain": "Security",
        "enumerateScope": false,
        "references": {
          "CWE-488": "https://cwe.mitre.org/data/definitions/488.html",
          "OWASP - Session fixation": "https://owasp.org/www-community/attacks/Session_fixation",
          "Ruby on Rails - Session fixation countermeasures": "https://guides.rubyonrails.org/security.html#session-fixation-countermeasures"
        },
        "description": "Determines when a user has been logged out from the application, but the session hasn't been cleared. When the session isn't cleared after logout, the session is vulnerable to a [session fixation attack](https://owasp.org/www-community/attacks/Session_fixation).",
        "url": "https://appland.com/docs/analysis/rules-reference.html#logout-without-session-reset"
      },
      "id": "logout-without-session-reset",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "missing-content-type",
        "title": "HTTP server request without a Content-Type header",
        "scope": "http_server_request",
        "impactDomain": "Stability",
        "enumerateScope": false,
        "description": "Finds HTTP server requests that don't provide a `Content-Type` header in the response.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#missing-content-type"
      },
      "id": "missing-content-type",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Stability"
    },
    {
      "rule": {
        "id": "n-plus-one-query",
        "title": "N plus 1 SQL query",
        "scope": "command",
        "impactDomain": "Performance",
        "enumerateScope": false,
        "references": {
          "CWE-1073": "https://cwe.mitre.org/data/definitions/1073.html"
        },
        "description": "Finds occurrences of a query being repeated within a loop.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#n-plus-one-query"
      },
      "id": "n-plus-one-query",
      "options": {
        "warningLimit": 5,
        "errorLimit": 10
      },
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Performance"
    },
    {
      "rule": {
        "id": "secret-in-log",
        "title": "Secret in log",
        "labels": [
          "secret",
          "log"
        ],
        "scope": "root",
        "impactDomain": "Security",
        "enumerateScope": true,
        "references": {
          "CWE-532": "https://cwe.mitre.org/data/definitions/532.html"
        },
        "description": "Identifies when a known or assumed secret is written to a log. Logs are often transported into other systems that are treated with lesser security - such as backups. Therefore, secrets written into log files are more likely to be leaked or discovered by cyber-attackers.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#secret-in-log"
      },
      "id": "secret-in-log",
      "options": {},
      "scope": "root",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "too-many-joins",
        "title": "Too many joins",
        "description": "Verifies that the number of joins in SQL queries does not exceed a threshold.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#too-many-joins",
        "labels": [],
        "enumerateScope": false,
        "impactDomain": "Performance",
        "references": {
          "CWE-1049": "https://cwe.mitre.org/data/definitions/1049.html"
        }
      },
      "id": "too-many-joins",
      "options": {
        "warningLimit": 5,
        "excludeTables": [
          {
            "match": {},
            "ignoreCase": false
          },
          {
            "equal": "information_schema",
            "ignoreCase": false
          }
        ]
      },
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Performance"
    },
    {
      "rule": {
        "id": "too-many-updates",
        "title": "Too many SQL and RPC updates performed in one command",
        "scope": "command",
        "enumerateScope": false,
        "impactDomain": "Maintainability",
        "references": {
          "CWE-1048": "https://cwe.mitre.org/data/definitions/1048.html"
        },
        "description": "Verifies that the number of SQL and RPC updates performed by a command does not exceed a threshold.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#too-many-updates"
      },
      "id": "too-many-updates",
      "options": {
        "warningLimit": 20
      },
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Maintainability"
    },
    {
      "rule": {
        "id": "unauthenticated-encryption",
        "title": "Unauthenticated encryption",
        "description": "Ensures that encryption operations use authenticated encryption.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#unauthenticated-encryption",
        "labels": [
          "crypto.encrypt",
          "crypto.set_auth_data"
        ],
        "enumerateScope": true,
        "impactDomain": "Security",
        "references": {
          "A02:2021": "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
        }
      },
      "id": "unauthenticated-encryption",
      "options": {},
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "update-in-get-request",
        "title": "Data update performed in GET or HEAD request",
        "scope": "http_server_request",
        "enumerateScope": true,
        "labels": [
          "audit"
        ],
        "impactDomain": "Maintainability",
        "description": "Finds SQL updates that are performed in an HTTP server `GET` request.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#update-in-get-request"
      },
      "id": "update-in-get-request",
      "options": {
        "_queryInclude": [
          {},
          {}
        ],
        "_queryExclude": []
      },
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Maintainability"
    }
  ],
  "summary": {
    "numAppMaps": 1,
    "numChecks": 13,
    "rules": [
      "authz-before-authn",
      "deprecated-crypto-algorithm",
      "deserialization-of-untrusted-data",
      "exec-of-untrusted-command",
      "http-500",
      "logout-without-session-reset",
      "missing-content-type",
      "n-plus-one-query",
      "secret-in-log",
      "too-many-joins",
      "too-many-updates",
      "unauthenticated-encryption",
      "update-in-get-request"
    ],
    "ruleLabels": [
      "audit",
      "crypto.decrypt",
      "crypto.digest",
      "crypto.encrypt",
      "crypto.set_auth_data",
      "deserialize.safe",
      "deserialize.sanitize",
      "deserialize.unsafe",
      "http.session.clear",
      "log",
      "secret",
      "security.authentication",
      "security.authorization",
      "security.logout",
      "system.exec",
      "system.exec.safe",
      "system.exec.sanitize"
    ],
    "numFindings": 1,
    "appMapMetadata": {
      "labels": [],
      "apps": [],
      "clients": [
        {
          "name": "appmap",
          "url": "https://github.com/applandinc/appmap-python"
        }
      ],
      "frameworks": [
        {
          "name": "Django",
          "version": "3.2.3"
        }
      ],
      "git": [
        {
          "repository": "https://github.com/ulisespallares888/Agenda.git",
          "branch": "master",
          "commit": "64e5f45e125a8a6d771aff07e039a1ef8f692d4e",
          "status": [
            "M Agenda/__pycache__/settings.cpython-39.pyc",
            "M Agenda/__pycache__/urls.cpython-39.pyc",
            "M Agenda/__pycache__/wsgi.cpython-39.pyc",
            "M Agenda/settings.py",
            "M Agenda_contactos/__pycache__/urls.cpython-39.pyc",
            "M Notitas/__pycache__/models.cpython-39.pyc",
            "M Notitas/__pycache__/urls.cpython-39.pyc",
            "M Notitas/__pycache__/views.cpython-39.pyc",
            "M Notitas/migrations/__pycache__/0005_notitas_fecha_creacion.cpython-39.pyc",
            "?? appmap.yml"
          ]
        }
      ],
      "languages": [
        {
          "name": "python",
          "engine": "CPython",
          "version": "3.9.7"
        }
      ],
      "recorders": [
        {
          "name": "record_requests"
        }
      ],
      "testStatuses": [],
      "exceptions": []
    }
  }
}