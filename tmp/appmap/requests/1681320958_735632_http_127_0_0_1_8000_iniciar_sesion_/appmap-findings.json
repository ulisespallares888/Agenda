{
  "configuration": {
    "checks": [
      {
        "rule": "authz-before-authn"
      },
      {
        "rule": "deprecated-crypto-algorithm"
      },
      {
        "rule": "deserialization-of-untrusted-data"
      },
      {
        "rule": "exec-of-untrusted-command"
      },
      {
        "rule": "http-500"
      },
      {
        "rule": "logout-without-session-reset"
      },
      {
        "rule": "missing-content-type"
      },
      {
        "rule": "n-plus-one-query"
      },
      {
        "rule": "secret-in-log"
      },
      {
        "rule": "too-many-joins"
      },
      {
        "rule": "too-many-updates"
      },
      {
        "rule": "unauthenticated-encryption"
      },
      {
        "rule": "update-in-get-request"
      }
    ],
    "timestampMs": 1681318714130.6113
  },
  "appMapMetadata": {
    "d:\\Ulises\\#Proyectos\\Proyectos con Django\\Proytecto_Agenda\\myenv\\Agenda\\tmp\\appmap\\requests\\1681320958_735632_http_127_0_0_1_8000_iniciar_sesion_.appmap.json": {
      "name": "POST /iniciar_sesion/ (302) - 14:35:58.735",
      "timestamp": 1681320958.735632,
      "fingerprints": [
        {
          "appmap_digest": "58f5e9d1cd08c13a74ae35e40d54ec4c9e60db760d15359c0b0ca370fcea2e6a",
          "canonicalization_algorithm": "classDependencies",
          "digest": "d4ba8ee58d12cfc42a528323f368a8b1fab5440160276f893a4690edd649461c",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "58f5e9d1cd08c13a74ae35e40d54ec4c9e60db760d15359c0b0ca370fcea2e6a",
          "canonicalization_algorithm": "classes",
          "digest": "a98083857916eef8ee4cae4a7b6390106eedcbdb4c4b30f1e4283b9af6d7dcfd",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "58f5e9d1cd08c13a74ae35e40d54ec4c9e60db760d15359c0b0ca370fcea2e6a",
          "canonicalization_algorithm": "httpClientRequests",
          "digest": "4f53cda18c2baa0c0354bb5f9a3ecbe5ed12ab4d8e11ba873c2f11161202b945",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "58f5e9d1cd08c13a74ae35e40d54ec4c9e60db760d15359c0b0ca370fcea2e6a",
          "canonicalization_algorithm": "httpServerRequests",
          "digest": "aa4b7ccf4f770495e2bdd6566ccdb292cacd8b22ad44401f8b0c4f951e9288b8",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "58f5e9d1cd08c13a74ae35e40d54ec4c9e60db760d15359c0b0ca370fcea2e6a",
          "canonicalization_algorithm": "info",
          "digest": "b657bd742aeffa12e170c77aa1380d1a1f5bd07ece0cb501398c177eb1cd1912",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "58f5e9d1cd08c13a74ae35e40d54ec4c9e60db760d15359c0b0ca370fcea2e6a",
          "canonicalization_algorithm": "labels",
          "digest": "89c98c9ceb0b9f46809f74994b27e3fefd0a3155c2c9eeb0921ca4306e7988f6",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "58f5e9d1cd08c13a74ae35e40d54ec4c9e60db760d15359c0b0ca370fcea2e6a",
          "canonicalization_algorithm": "packageDependencies",
          "digest": "6743e18e79b61c09ee85df9ddb052f9b470ee16afb556f734acec114341adf1f",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "58f5e9d1cd08c13a74ae35e40d54ec4c9e60db760d15359c0b0ca370fcea2e6a",
          "canonicalization_algorithm": "packages",
          "digest": "be98205448b19a63405ebd4f41fea1a38d2ec62b0469e0465d0a064d12303236",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "58f5e9d1cd08c13a74ae35e40d54ec4c9e60db760d15359c0b0ca370fcea2e6a",
          "canonicalization_algorithm": "sqlNormalized",
          "digest": "b7199396f1ea53199f0ce56d3ece66d35495a07e947dd5876d1baa05597ba830",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "58f5e9d1cd08c13a74ae35e40d54ec4c9e60db760d15359c0b0ca370fcea2e6a",
          "canonicalization_algorithm": "sqlTables",
          "digest": "d2e84e781a050fdb7604fbc35d7ba162df596e0f6a87edcd0aefcadf7e8ecaca",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "58f5e9d1cd08c13a74ae35e40d54ec4c9e60db760d15359c0b0ca370fcea2e6a",
          "canonicalization_algorithm": "trace",
          "digest": "85eecd3f73e80237758dde90363ee4d8453946f5ec051852b758d5ffb90ce64c",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "58f5e9d1cd08c13a74ae35e40d54ec4c9e60db760d15359c0b0ca370fcea2e6a",
          "canonicalization_algorithm": "update",
          "digest": "076f8e103a49616c089f7894b84bfcd7a9f1caa87a4f7af823eacada1d95e176",
          "fingerprint_algorithm": "sha256"
        }
      ]
    }
  },
  "findings": [],
  "checks": [
    {
      "rule": {
        "id": "authz-before-authn",
        "title": "Authorization performed before authentication",
        "labels": [
          "security.authorization",
          "security.authentication"
        ],
        "scope": "http_server_request",
        "impactDomain": "Security",
        "enumerateScope": false,
        "references": {
          "CWE-863": "https://cwe.mitre.org/data/definitions/863.html"
        },
        "description": "Determines when authorization logic is applied to a user identity that has not been properly verified. Because the the user's identity has not been verified yet, the outcome of the authorization check cannot be trusted. A malicious user might be able to get themselves authorized as a different user than they really are - or they may not be logged in at all.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#authz-before-authn"
      },
      "id": "authz-before-authn",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "deprecated-crypto-algorithm",
        "title": "Deprecated cryptographic algorithm",
        "description": "---\nrule: deprecated-crypto-algorithm\nname: Deprecated crypto algorithm\ntitle: Deprecated cryptographic algorithm\nreferences:\n  A02:2021: https://owasp.org/Top10/A02_2021-Cryptographic_Failures/\nimpactDomain: Security\nlabels:\n  - crypto.encrypt\n  - crypto.decrypt\n  - crypto.digest\nscope: root\n---\n\nEnsure that cryptographic operations do not use deprecated algorithms.\n",
        "url": "https://appland.com/docs/analysis/rules-reference.html#deprecated-crypto-algorithm",
        "labels": [
          "crypto.encrypt",
          "crypto.decrypt",
          "crypto.digest"
        ],
        "scope": "root",
        "enumerateScope": true,
        "impactDomain": "Security",
        "references": {
          "A02:2021": "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
        }
      },
      "id": "deprecated-crypto-algorithm",
      "options": {},
      "scope": "root",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "deserialization-of-untrusted-data",
        "title": "Deserialization of untrusted data",
        "labels": [
          "deserialize.unsafe",
          "deserialize.safe",
          "deserialize.sanitize"
        ],
        "impactDomain": "Security",
        "enumerateScope": false,
        "scope": "http_server_request",
        "references": {
          "CWE-502": "https://cwe.mitre.org/data/definitions/502.html",
          "Ruby Security": "https://docs.ruby-lang.org/en/3.0/doc/security_rdoc.html"
        },
        "description": "Finds occurrances of deserialization in which the mechanism employed is known to be unsafe, and the data comes from an untrusted source and hasn't passed through a sanitization mechanism.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#deserialization-of-untrusted-data"
      },
      "id": "deserialization-of-untrusted-data",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "exec-of-untrusted-command",
        "title": "Execution of untrusted system command",
        "labels": [
          "system.exec",
          "system.exec.safe",
          "system.exec.sanitize"
        ],
        "impactDomain": "Security",
        "enumerateScope": false,
        "references": {
          "CWE-78": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "description": "Find occurrances of system command execution in which the command string is not guaranteed to be safe.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#exec-of-untrusted-command"
      },
      "id": "exec-of-untrusted-command",
      "options": {},
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "http-500",
        "title": "HTTP 500 status code",
        "description": "Identifies when an HTTP server request has returned a 500 status code. HTTP 500 status code generally indicate an unanticipated problem in the backend that is not handled in a predictable way. 500 status codes are also hard for client code to handle, because they don't indicate any particular problem or suggest a solution.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#http-500",
        "labels": [],
        "scope": "http_server_request",
        "enumerateScope": false,
        "impactDomain": "Stability",
        "references": {
          "CWE-392": "https://cwe.mitre.org/data/definitions/392.html"
        }
      },
      "id": "http-500",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Stability"
    },
    {
      "rule": {
        "id": "logout-without-session-reset",
        "title": "Logout without session reset",
        "scope": "http_server_request",
        "labels": [
          "http.session.clear",
          "security.logout"
        ],
        "impactDomain": "Security",
        "enumerateScope": false,
        "references": {
          "CWE-488": "https://cwe.mitre.org/data/definitions/488.html",
          "OWASP - Session fixation": "https://owasp.org/www-community/attacks/Session_fixation",
          "Ruby on Rails - Session fixation countermeasures": "https://guides.rubyonrails.org/security.html#session-fixation-countermeasures"
        },
        "description": "Determines when a user has been logged out from the application, but the session hasn't been cleared. When the session isn't cleared after logout, the session is vulnerable to a [session fixation attack](https://owasp.org/www-community/attacks/Session_fixation).",
        "url": "https://appland.com/docs/analysis/rules-reference.html#logout-without-session-reset"
      },
      "id": "logout-without-session-reset",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "missing-content-type",
        "title": "HTTP server request without a Content-Type header",
        "scope": "http_server_request",
        "impactDomain": "Stability",
        "enumerateScope": false,
        "description": "Finds HTTP server requests that don't provide a `Content-Type` header in the response.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#missing-content-type"
      },
      "id": "missing-content-type",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Stability"
    },
    {
      "rule": {
        "id": "n-plus-one-query",
        "title": "N plus 1 SQL query",
        "scope": "command",
        "impactDomain": "Performance",
        "enumerateScope": false,
        "references": {
          "CWE-1073": "https://cwe.mitre.org/data/definitions/1073.html"
        },
        "description": "Finds occurrences of a query being repeated within a loop.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#n-plus-one-query"
      },
      "id": "n-plus-one-query",
      "options": {
        "warningLimit": 5,
        "errorLimit": 10
      },
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Performance"
    },
    {
      "rule": {
        "id": "secret-in-log",
        "title": "Secret in log",
        "labels": [
          "secret",
          "log"
        ],
        "scope": "root",
        "impactDomain": "Security",
        "enumerateScope": true,
        "references": {
          "CWE-532": "https://cwe.mitre.org/data/definitions/532.html"
        },
        "description": "Identifies when a known or assumed secret is written to a log. Logs are often transported into other systems that are treated with lesser security - such as backups. Therefore, secrets written into log files are more likely to be leaked or discovered by cyber-attackers.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#secret-in-log"
      },
      "id": "secret-in-log",
      "options": {},
      "scope": "root",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "too-many-joins",
        "title": "Too many joins",
        "description": "Verifies that the number of joins in SQL queries does not exceed a threshold.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#too-many-joins",
        "labels": [],
        "enumerateScope": false,
        "impactDomain": "Performance",
        "references": {
          "CWE-1049": "https://cwe.mitre.org/data/definitions/1049.html"
        }
      },
      "id": "too-many-joins",
      "options": {
        "warningLimit": 5,
        "excludeTables": [
          {
            "match": {},
            "ignoreCase": false
          },
          {
            "equal": "information_schema",
            "ignoreCase": false
          }
        ]
      },
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Performance"
    },
    {
      "rule": {
        "id": "too-many-updates",
        "title": "Too many SQL and RPC updates performed in one command",
        "scope": "command",
        "enumerateScope": false,
        "impactDomain": "Maintainability",
        "references": {
          "CWE-1048": "https://cwe.mitre.org/data/definitions/1048.html"
        },
        "description": "Verifies that the number of SQL and RPC updates performed by a command does not exceed a threshold.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#too-many-updates"
      },
      "id": "too-many-updates",
      "options": {
        "warningLimit": 20
      },
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Maintainability"
    },
    {
      "rule": {
        "id": "unauthenticated-encryption",
        "title": "Unauthenticated encryption",
        "description": "Ensures that encryption operations use authenticated encryption.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#unauthenticated-encryption",
        "labels": [
          "crypto.encrypt",
          "crypto.set_auth_data"
        ],
        "enumerateScope": true,
        "impactDomain": "Security",
        "references": {
          "A02:2021": "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
        }
      },
      "id": "unauthenticated-encryption",
      "options": {},
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "update-in-get-request",
        "title": "Data update performed in GET or HEAD request",
        "scope": "http_server_request",
        "enumerateScope": true,
        "labels": [
          "audit"
        ],
        "impactDomain": "Maintainability",
        "description": "Finds SQL updates that are performed in an HTTP server `GET` request.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#update-in-get-request"
      },
      "id": "update-in-get-request",
      "options": {
        "_queryInclude": [
          {},
          {}
        ],
        "_queryExclude": []
      },
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Maintainability"
    }
  ],
  "summary": {
    "numAppMaps": 1,
    "numChecks": 13,
    "rules": [
      "authz-before-authn",
      "deprecated-crypto-algorithm",
      "deserialization-of-untrusted-data",
      "exec-of-untrusted-command",
      "http-500",
      "logout-without-session-reset",
      "missing-content-type",
      "n-plus-one-query",
      "secret-in-log",
      "too-many-joins",
      "too-many-updates",
      "unauthenticated-encryption",
      "update-in-get-request"
    ],
    "ruleLabels": [
      "audit",
      "crypto.decrypt",
      "crypto.digest",
      "crypto.encrypt",
      "crypto.set_auth_data",
      "deserialize.safe",
      "deserialize.sanitize",
      "deserialize.unsafe",
      "http.session.clear",
      "log",
      "secret",
      "security.authentication",
      "security.authorization",
      "security.logout",
      "system.exec",
      "system.exec.safe",
      "system.exec.sanitize"
    ],
    "numFindings": 0,
    "appMapMetadata": {
      "labels": [],
      "apps": [],
      "clients": [
        {
          "name": "appmap",
          "url": "https://github.com/applandinc/appmap-python"
        }
      ],
      "frameworks": [
        {
          "name": "Django",
          "version": "3.2.3"
        }
      ],
      "git": [
        {
          "repository": "https://github.com/ulisespallares888/Agenda.git",
          "branch": "master",
          "commit": "64e5f45e125a8a6d771aff07e039a1ef8f692d4e",
          "status": [
            "M Agenda/__pycache__/settings.cpython-39.pyc",
            "M Agenda/__pycache__/urls.cpython-39.pyc",
            "M Agenda/__pycache__/wsgi.cpython-39.pyc",
            "M Agenda/settings.py",
            "M Agenda_contactos/__pycache__/urls.cpython-39.pyc",
            "M Notitas/__pycache__/models.cpython-39.pyc",
            "M Notitas/__pycache__/urls.cpython-39.pyc",
            "M Notitas/__pycache__/views.cpython-39.pyc",
            "M Notitas/migrations/__pycache__/0005_notitas_fecha_creacion.cpython-39.pyc",
            "?? appmap.yml"
          ]
        }
      ],
      "languages": [
        {
          "name": "python",
          "engine": "CPython",
          "version": "3.9.7"
        }
      ],
      "recorders": [
        {
          "name": "record_requests"
        }
      ],
      "testStatuses": [],
      "exceptions": []
    }
  }
}